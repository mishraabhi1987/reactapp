{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactapp\\\\reactapp\\\\src\\\\components\\\\Moviesearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axio from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Moviesearch = () => {\n  _s();\n\n  const [moviedata, setmoviedata] = useState({\n    Actors: \"\",\n    Awards: \"\",\n    Country: \"\",\n    Director: \"\",\n    Genre: \"\",\n    Language: \"\",\n    Metascore: \"\",\n    Plot: \"\",\n    Poster: \"\",\n    Rated: \"\",\n    Ratings: [{\n      Source: \"\",\n      Value: \"\"\n    }],\n    Released: \"\",\n    Response: \"\",\n    Runtime: \"\",\n    Title: \"\",\n    Type: \"\",\n    Writer: \"\",\n    Year: \"\",\n    imdbID: \"\",\n    imdbRating: \"\",\n    imdbVotes: \"\",\n    totalSeasons: \"\"\n  });\n  const [moviename, setmoviename] = useState();\n\n  async function getmoviedata() {\n    const res = await axio.get(\"http://www.omdbapi.com/?t=scam+1992&apikey=511b46e\");\n    setmoviedata(res.data);\n  }\n\n  getmoviedata();\n\n  const getmoviename = event => {\n    setmoviename(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: moviename,\n      onChange: getmoviename\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: \"14.5rem\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: moviedata.Poster,\n        className: \"card-img-top\",\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"card-title\",\n          children: moviedata.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Moviesearch, \"IToVP0ZmbQFw/JEf2FQE9rmrqcw=\");\n\n_c = Moviesearch;\nexport default Moviesearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Moviesearch\");","map":{"version":3,"sources":["D:/reactapp/reactapp/src/components/Moviesearch.jsx"],"names":["React","useState","useEffect","axio","Moviesearch","moviedata","setmoviedata","Actors","Awards","Country","Director","Genre","Language","Metascore","Plot","Poster","Rated","Ratings","Source","Value","Released","Response","Runtime","Title","Type","Writer","Year","imdbID","imdbRating","imdbVotes","totalSeasons","moviename","setmoviename","getmoviedata","res","get","data","getmoviename","event","target","value","width","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,OAAjB;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CACvC;AACKM,IAAAA,MAAM,EAAE,EADb;AAEKC,IAAAA,MAAM,EAAE,EAFb;AAGKC,IAAAA,OAAO,EAAE,EAHd;AAIKC,IAAAA,QAAQ,EAAE,EAJf;AAKKC,IAAAA,KAAK,EAAE,EALZ;AAMKC,IAAAA,QAAQ,EAAE,EANf;AAOKC,IAAAA,SAAS,EAAE,EAPhB;AAQKC,IAAAA,IAAI,EAAE,EARX;AASKC,IAAAA,MAAM,EAAE,EATb;AAUKC,IAAAA,KAAK,EAAE,EAVZ;AAWKC,IAAAA,OAAO,EAAE,CAAC;AAACC,MAAAA,MAAM,EAAE,EAAT;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAAD,CAXd;AAYKC,IAAAA,QAAQ,EAAE,EAZf;AAaKC,IAAAA,QAAQ,EAAE,EAbf;AAcKC,IAAAA,OAAO,EAAE,EAdd;AAeKC,IAAAA,KAAK,EAAE,EAfZ;AAgBKC,IAAAA,IAAI,EAAE,EAhBX;AAiBKC,IAAAA,MAAM,EAAE,EAjBb;AAkBKC,IAAAA,IAAI,EAAE,EAlBX;AAmBKC,IAAAA,MAAM,EAAE,EAnBb;AAoBKC,IAAAA,UAAU,EAAE,EApBjB;AAqBKC,IAAAA,SAAS,EAAE,EArBhB;AAsBKC,IAAAA,YAAY,EAAE;AAtBnB,GADuC,CAA1C;AA0BA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,EAA1C;;AACA,iBAAegC,YAAf,GAA6B;AACzB,UAAMC,GAAG,GAAG,MAAM/B,IAAI,CAACgC,GAAL,CAAS,oDAAT,CAAlB;AACA7B,IAAAA,YAAY,CAAC4B,GAAG,CAACE,IAAL,CAAZ;AACH;;AACDH,EAAAA,YAAY;;AACZ,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC5BN,IAAAA,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAET,SAA1B;AAAqC,MAAA,QAAQ,EAAEM;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAA7B;AAAA,8BACA;AAAK,QAAA,GAAG,EAAErC,SAAS,CAACU,MAApB;AAA4B,QAAA,SAAS,EAAC,cAAtC;AAAqD,QAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAC2B,UAAAA,OAAO,EAAE;AAAV,SAAlC;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BrC,SAAS,CAACkB;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAaH,CAjDD;;GAAMnB,W;;KAAAA,W;AAkDN,eAAeA,WAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport axio from 'axios';\r\n\r\nconst Moviesearch = () => {\r\n    const [moviedata, setmoviedata] = useState(\r\n       {\r\n            Actors: \"\",\r\n            Awards: \"\",\r\n            Country: \"\",\r\n            Director: \"\",\r\n            Genre: \"\",\r\n            Language: \"\",\r\n            Metascore: \"\",\r\n            Plot: \"\",\r\n            Poster: \"\",\r\n            Rated: \"\",\r\n            Ratings: [{Source: \"\", Value: \"\"}],\r\n            Released: \"\",\r\n            Response: \"\",\r\n            Runtime: \"\",\r\n            Title: \"\",\r\n            Type: \"\",\r\n            Writer: \"\",\r\n            Year: \"\",\r\n            imdbID: \"\",\r\n            imdbRating: \"\",\r\n            imdbVotes: \"\",\r\n            totalSeasons: \"\"\r\n        }\r\n    )\r\n    const [moviename, setmoviename] = useState();\r\n    async function getmoviedata(){\r\n        const res = await axio.get(\"http://www.omdbapi.com/?t=scam+1992&apikey=511b46e\");\r\n        setmoviedata(res.data);\r\n    }\r\n    getmoviedata();\r\n    const getmoviename = (event) => {\r\n        setmoviename(event.target.value);\r\n    }\r\n    return(\r\n        <>\r\n            <h1>Movie Search</h1>\r\n            <input type=\"text\" value={moviename} onChange={getmoviename} />\r\n            <div className=\"card\" style={{width: \"14.5rem\", padding: \"10px\"}}>\r\n            <img src={moviedata.Poster} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\" style={{padding: \"0px\"}}>\r\n                <h6 className=\"card-title\">{moviedata.Title}</h6>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Moviesearch;\r\n\r\n"]},"metadata":{},"sourceType":"module"}